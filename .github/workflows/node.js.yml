# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'

    - name: Run make.js
      run: node ext/make.js

    - name: Release latest version
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ secrets.PAT_TOKEN }}
        tag_name: 'latest'
        files: |
          ./ext/NTJ.js

    - name: Get current version
      id: get_version
      run: echo "::set-output name=version::$(cat ./ext/mainfest.json)"

    - name: Increment version
      id: increment_version
      run: |
        version=$(echo "${{ steps.get_version.outputs.version }}" | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
        echo "::set-output name=new_version::$version"

    - name: Create new tag
      uses: actions/github-script@v6
      with:
        script: |
          const newVersion = '${{ steps.increment_version.outputs.new_version }}';
          github.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `refs/tags/v${newVersion}`,
            sha: context.sha,
          });

    - name: Release new version
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ secrets.PAT_TOKEN }}
        tag_name: 'v${{ steps.increment_version.outputs.new_version }}'
        files: |
          ./ext/NTJ.js